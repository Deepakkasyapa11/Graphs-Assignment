
class Graph:
	
	adj = []

	def __init__(self, v, e):
		
		self.v = v
		self.e = e
		Graph.adj = [[0 for i in range(v)]
						for j in range(v)]

	def addEdge(self, start, e):
		
		Graph.adj[start][e] = 1

	def DFS(self, start, visited):
		

		print(start, end = ' ')

		visited[start] = True

		for i in range(self.v):

			if (Graph.adj[start][i] == 1 and
					(not visited[i])):
				self.DFS(i, visited)

v, e = 8, 8

G = Graph(v, e)
G.addEdge(1, 2)
G.addEdge(2, 7)
G.addEdge(2, 4)
G.addEdge(3, 4)
G.addEdge(4, 6)
G.addEdge(5, 4)
G.addEdge(5, 3)
G.addEdge(6, 0)
G.addEdge(7, 5)

visited = [False] * v

G.DFS(1, visited);
